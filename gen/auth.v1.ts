// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.0.3
//   protoc               v5.27.1
// source: auth.v1.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { User, UserInfo } from "./user.v1";

export const protobufPackage = "auth.v1";

export enum AuthSystem {
  SYSTEM_UNKNOWN = 0,
  SYSTEM_ACCORD = 1,
  SYSTEM_LKS = 2,
  UNRECOGNIZED = -1,
}

export interface AuthResponse {
  user: User | undefined;
}

export interface ErrorDetails {
  system: AuthSystem;
}

export interface CheckResponse {
  details: ErrorDetails | undefined;
}

export const AUTH_V1_PACKAGE_NAME = "auth.v1";

export interface AuthServiceClient {
  auth(request: UserInfo): Observable<AuthResponse>;

  check(request: UserInfo): Observable<CheckResponse>;
}

export interface AuthServiceController {
  auth(request: UserInfo): Promise<AuthResponse> | Observable<AuthResponse> | AuthResponse;

  check(request: UserInfo): Promise<CheckResponse> | Observable<CheckResponse> | CheckResponse;
}

export function AuthServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["auth", "check"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const AUTH_SERVICE_NAME = "AuthService";
